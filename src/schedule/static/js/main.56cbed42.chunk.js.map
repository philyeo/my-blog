{"version":3,"sources":["components/Search.js","components/AddAppointment.js","components/AppointmentInfo.js","App.js","index.js"],"names":["DropDown","toggle","sortBy","onSortByChange","orderBy","onOrderByChange","className","role","onClick","Search","query","onQueryChange","useState","toggleSort","setToggleSort","htmlFor","type","name","id","value","onChange","event","target","placeholder","mySort","myOrder","AddAppointment","onSendAppointment","lastId","clearData","ownerName","petName","aptDate","aptTime","aptNotes","toggleForm","setToggleForm","formData","setFormData","rows","appointmentInfo","AppointmentInfo","appointment","onDeleteAppointment","App","appointmentList","setAppointmentList","setQuery","setSortBy","setOrderBy","filteredAppointments","filter","item","toLowerCase","includes","sort","a","b","order","fetchData","useCallback","fetch","then","response","json","data","useEffect","myAppointment","reduce","max","Number","myQuery","map","appointmentId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56cbed42.chunk.js","sourcesContent":["import { BiSearch, BiCaretDown, BiCheck } from 'react-icons/bi';\nimport { useState } from 'react';\n\nconst DropDown = ({ toggle, sortBy, onSortByChange, orderBy, onOrderByChange }) => {\n    if (!toggle) {\n      return null;\n    }\n    return (\n        <div className=\"origin-top-right absolute right-0 mt-2 w-56\n        rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\n        <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n          <div onClick={() => onSortByChange('petName')}\n            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\n            role=\"menuitem\">Pet Name {(sortBy === 'petName') && <BiCheck />}</div>\n          <div onClick={() => onSortByChange('ownerName')}\n            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\n            role=\"menuitem\">Owner Name  {(sortBy === 'ownerName') && <BiCheck />}</div>\n          <div onClick={() => onSortByChange('aptDate')}\n            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\n            role=\"menuitem\">Date {(sortBy === 'aptDate') && <BiCheck />}</div>\n          <div onClick={() => onOrderByChange('asc')}\n            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer border-gray-1 border-t-2\"\n            role=\"menuitem\">Asc {(orderBy === 'asc') && <BiCheck />}</div>\n          <div onClick={() => onOrderByChange('desc')}\n            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\n            role=\"menuitem\">Desc {(orderBy === 'desc') && <BiCheck />}</div>\n        </div>\n      </div>\n    )\n}\n\nconst Search = ({query, onQueryChange, sortBy, onSortByChange, orderBy, onOrderByChange}) => {\n    let [toggleSort, setToggleSort] = useState(false)\n    return  (\n        <div className=\"py-5\">\n        <div className=\"mt-1 relative rounded-md shadow-sm\">\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <BiSearch />\n            <label htmlFor=\"query\" className=\"sr-only\" />\n          </div>\n          <input type=\"text\" name=\"query\" id=\"query\" value={query}\n            onChange = {(event) => {onQueryChange(event.target.value)}}\n            className=\"pl-8 rounded-md focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300\" placeholder=\"Search\" />\n          <div className=\"absolute inset-y-0 right-0 flex items-center\">\n            <div>\n              <button type=\"button\" onClick={() => { setToggleSort(!toggleSort) }}\n                className=\"justify-center px-4 py-2 bg-blue-400 border-2 border-blue-400 text-sm text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 flex items-center\" id=\"options-menu\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                Sort By <BiCaretDown className=\"ml-2\" />\n              </button>\n              <DropDown toggle={toggleSort}\n                sortBy={sortBy}\n                onSortByChange={mySort => onSortByChange(mySort)}\n                orderBy={orderBy}\n                onOrderByChange={myOrder => onOrderByChange(myOrder)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default Search;","import { BiCalendarPlus } from 'react-icons/bi';\nimport { useState } from 'react';\n\nconst AddAppointment = ({onSendAppointment, lastId}) => {\n  const clearData = {\n    ownerName: '',\n    petName: '',\n    aptDate: '',\n    aptTime: '',\n    aptNotes: ''\n  }\n\n  function formDataPublish() {\n    const appointmentInfo = {\n      id: lastId + 1,\n      ownerName: formData.ownerName,\n      petName: formData.petName,\n      aptDate: formData.aptDate + ' ' + formData.aptTime,\n      aptNotes: formData.aptNotes\n    }\n    onSendAppointment(appointmentInfo);\n    setFormData(clearData);\n    setToggleForm(!toggleForm);\n  }\n\n  let [toggleForm, setToggleForm] = useState(false)\n  let [formData, setFormData] = useState(clearData)\n    return (\n        <div>\n        <button onClick={() => { setToggleForm(!toggleForm)}} \n          className={ `bg-blue-400 text-white px-2 py-3 w-full text-left rounded-t-md\n          ${toggleForm ? 'rounded-t-md' : 'rounded-md'}`}>\n          <div><BiCalendarPlus className=\"inline-block align-text-top\" />  Add Appointment</div>\n        </button>\n        {\n          toggleForm && \n          <div className=\"border-r-2 border-b-2 border-l-2 border-light-blue-500 rounded-b-md pl-4 pr-4 pb-4\">\n          <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n            <label htmlFor=\"ownerName\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n              Owner Name\n            </label>\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n              <input type=\"text\" name=\"ownerName\" id=\"ownerName\"\n                onChange={(event) => {setFormData({...formData, ownerName: event.target.value})}}\n                value={formData.ownerName}\n                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\n            </div>\n          </div>\n  \n          <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n            <label htmlFor=\"petName\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n              Pet Name\n            </label>\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n              <input type=\"text\" name=\"petName\" id=\"petName\"\n                onChange={(event) => {setFormData({...formData, petName: event.target.value})}}\n                value={formData.petName}\n                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\n            </div>\n          </div>\n  \n          <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n            <label htmlFor=\"aptDate\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n              Apt Date\n            </label>\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n              <input type=\"date\" name=\"aptDate\" id=\"aptDate\"\n                onChange={(event) => {setFormData({...formData, aptDate: event.target.value})}}\n                value={formData.aptDate}\n                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\n            </div>\n          </div>\n  \n          <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n            <label htmlFor=\"aptTime\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n              Apt Time\n            </label>\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n              <input type=\"time\" name=\"aptTime\" id=\"aptTime\"\n                onChange={(event) => {setFormData({...formData, aptTime: event.target.value})}}\n                value={formData.aptTime}\n                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\n            </div>\n          </div>\n  \n          <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n            <label htmlFor=\"aptNotes\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n              Appointment Notes\n            </label>\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n              <textarea id=\"aptNotes\" name=\"aptNotes\" rows=\"3\"\n                onChange={(event) => {setFormData({...formData, aptNotes: event.target.value})}}\n                value={formData.aptNotes}\n                className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border-gray-300 rounded-md\" placeholder=\"Detailed comments about the condition\"></textarea>\n            </div>\n          </div>\n  \n  \n          <div className=\"pt-5\">\n            <div className=\"flex justify-end\">\n              <button type=\"submit\" onClick={formDataPublish} className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-400 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\">\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n        }\n      </div>        \n    )\n}\n\nexport default AddAppointment;","import { BiTrash } from 'react-icons/bi';\n\nconst AppointmentInfo = ({ appointment, onDeleteAppointment }) => {\n    return (\n        <li className=\"px-3 py-3 flex items-start\">\n            <button onClick={ () => onDeleteAppointment(appointment.id) } type=\"button\"\n            className=\"p-1.5 mr-1.5 mt-1 rounded text-white bg-red-500 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n            <BiTrash /></button>\n            <div className=\"flex-grow\">\n                <div className=\"flex items-center\">\n                    <span className=\"flex-none font-medium text-2xl text-blue-500\">{appointment.petName}</span>\n                    <span className=\"flex-grow text-right\">{appointment.aptDate}</span>\n                </div>\n                <div><b className=\"font-bold text-blue-500\">Owner:</b> {appointment.ownerName}</div>\n                 <div className=\"leading-tight\">{appointment.aptNotes}</div>\n            </div>\n        </li>        \n    )\n}\n\nexport default AppointmentInfo;","import { useState, useEffect, useCallback } from 'react';\nimport { BiCalendar } from 'react-icons/bi';\nimport Search from './components/Search';\nimport AddAppointment from \"./components/AddAppointment\";\nimport AppointmentInfo from \"./components/AppointmentInfo\";\n\nfunction App() {\n\n  let [appointmentList, setAppointmentList] = useState([]);\n  let [query, setQuery] = useState(\"\");\n  let [sortBy, setSortBy] = useState(\"petName\");\n  let [orderBy, setOrderBy] = useState(\"asc\");\n\n  const filteredAppointments = appointmentList.filter(\n    item => {\n      return (\n        item.petName.toLowerCase().includes(query.toLowerCase()) || \n        item.ownerName.toLowerCase().includes(query.toLowerCase()) || \n        item.aptNotes.toLowerCase().includes(query.toLowerCase()) \n      )\n    }\n  ).sort((a, b) => {\n    let order = (orderBy=== 'asc') ? 1 : -1;\n    return (\n      a[sortBy].toLowerCase() <  b[sortBy].toLowerCase() \n        ? -1 * order : 1* order\n    )\n  })\n\n  const fetchData = useCallback(() => {\n    fetch('/api/schedule')\n      .then(response => response.json())\n      .then(data => {\n        setAppointmentList(data)\n      });\n  }, [])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData]);\n\n  return (\n    <div className=\"App container mx-auto mt-3 font-thin\">\n      <h1 className=\"text-5xl mb-3\">\n          <BiCalendar className=\"inline-block text-red-400\" align-top />Your Appointments</h1>\n        <AddAppointment \n          onSendAppointment={myAppointment => setAppointmentList([...appointmentList, myAppointment])}\n          lastId={appointmentList.reduce((max, item) => Number(item.id) > max ? Number(item.id): max, 0)}\n        />\n        <Search query={query}\n          onQueryChange={myQuery => setQuery(myQuery)}\n          orderBy={orderBy}\n          onOrderByChange={mySort => setOrderBy(mySort)}\n          sortBy={sortBy}\n          onSortByChange={mySort => setSortBy(mySort)}\n        />\n\n        <ul className=\"divide-y divide-gray-200\">\n          {filteredAppointments\n            .map(appointment => (\n              <AppointmentInfo key={appointment.id}\n                appointment={appointment}\n                onDeleteAppointment={\n                  appointmentId => \n                    setAppointmentList(appointmentList.filter(appointment => appointment.id !== appointmentId))\n                }\n              />\n            ))\n          }\n        </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}